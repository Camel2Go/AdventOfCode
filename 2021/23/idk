[None, None, None, None, None, None, None, None, None, None, None] ([1, 0], [0, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, None, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[1, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[1, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[1, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[1, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[1, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[1, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, 1, None, None, None, None, None, None, None, None, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[None, 1, None, 0, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, 1, None, None, None, None, None, None, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[None, None, None, 1, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, 1, None, None, None, None, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[0, None, None, None, None, 1, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 1, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, 1, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 1, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 0, None, 1, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 1, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, 1, None, None, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[0, None, None, None, None, None, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 0, None, None, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 0, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, None, None, 1, None] ([None, 0], [0, 1], [2, 2], [3, 3])
[0, None, None, None, None, None, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 0, None, None, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 0, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, 0, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, None, None, None, 1] ([None, 0], [0, 1], [2, 2], [3, 3])
[0, None, None, None, None, None, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 0, None, None, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 0, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, 0, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, None, None, 0, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[0, None, None, None, None, None, None, None, None, None, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[0, 1, None, None, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[0, None, None, 1, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, 1, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[0, None, None, None, None, 1, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 1, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[0, None, None, None, None, None, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[0, None, None, None, None, None, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[0, None, None, None, None, None, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[0, None, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, 0, None, None, None, None, None, None, None, None, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[None, 0, None, 1, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, 1, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, 1, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 1, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, 1, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 1, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, None, None, 1, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 1, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 0, None, None, None, None, None, None, None, None, 1] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 1] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 0, None, None, None, None, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, 0, None, None, None, None, None, None, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, 0, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, 0, None, None, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, 0, None, None, None, None, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, 0, None, None, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, 0, None, None, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, 0, None, None, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, None, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 1, None, 0, None, None, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, 0, None, None, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, None, None, 0, None] ([1, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, None, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 1, None, None, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, 1, None, 0, None] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, 0, None] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
[None, None, None, None, None, None, None, None, None, None, 0] ([1, 0], [None, 1], [2, 2], [3, 3])
[1, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[1, None, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, 1, None, None, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
[None, 1, None, None, None, None, None, None, None, None, None] ([0, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, 1, None, None, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, 1, None, None, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, 1, None, None, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
[None, None, None, None, None, None, None, None, None, 1, 0] ([None, 0], [None, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, 0] ([None, 0], [1, 1], [2, 2], [3, 3])
[None, None, None, None, None, None, None, None, None, None, None] ([0, 0], [1, 1], [2, 2], [3, 3])
found
done
done
done
done
None

===== 0.0258333683013916 sec =====
